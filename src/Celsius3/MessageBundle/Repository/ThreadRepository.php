<?php

namespace Celsius3\MessageBundle\Repository;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\ODM\MongoDB\DocumentRepository;
use Doctrine\ODM\MongoDB\Query\Builder;
use Celsius3\CoreBundle\Document\BaseUser;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ThreadRepository extends DocumentRepository
{

    public function applyExtraFilters(Builder $builder, Request $request,
            BaseUser $user)
    {
        if ($request->query->has('created_between')
                && $request->query->get('created_between') != '') {
            $between = new \DateTime($request->query->get('created_between'));
            if ($request->query->has('and')
                    && $request->query->get('and') != '') {
                $and = new \DateTime($request->query->get('and'));
                $builder = $builder->field('createdAt')->range($between, $and);
            } else {
                $builder = $builder->field('createdAt')->gte($between);
            }
        } elseif ($request->query->has('and')
                && $request->query->get('and') != '') {
            $and = new \DateTime($request->query->get('and'));
            $builder = $builder->field('createdAt')->lte($and);
        }

        if ($request->query->has('read')) {
            $qb = $this->dm
                    ->getRepository('Celsius3MessageBundle:Message')
                    ->createQueryBuilder()->hydrate(false)->select('id');

            $messages = array_keys(
                    $qb->field('metadata')
                            ->elemMatch(
                                    $qb->expr()->field('isRead')->equals(false)
                                            ->field('participant.$id')
                                            ->equals(
                                                    new \MongoId($user->getId())))
                            ->getQuery()->execute()->toArray());

            $builder = $builder->field('messages.id')->notIn($messages);
        }

        if ($request->query->has('unread')) {
            $qb = $this->dm
                    ->getRepository('Celsius3MessageBundle:Message')
                    ->createQueryBuilder()->hydrate(false)->select('id');

            $messages = array_keys(
                    $qb->field('metadata')
                            ->elemMatch(
                                    $qb->expr()->field('isRead')->equals(false)
                                            ->field('participant.$id')
                                            ->equals(
                                                    new \MongoId($user->getId())))
                            ->getQuery()->execute()->toArray());

            $builder = $builder->field('messages.id')->in($messages);
        }

        return $builder;
    }

}
